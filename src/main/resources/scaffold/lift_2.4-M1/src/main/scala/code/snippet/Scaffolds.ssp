<%@ var properName: String %>
<%@ var lowerName: String %>
<%@ var fieldList: List[FieldDefinition] %>

package code.snippet

import net.liftweb.http._
import net.liftweb.util._
import Helpers._
import code.model._

object ${properName}s {

  object Show${properName} extends RequestVar[Option[${properName}]](None)

  def all = ".${lowerName} * " #> ${properName}.findAll.map(bind(_))
  def show = ".${lowerName} * " #> Show${properName}.is.map(bind(_))

  def bind(${lowerName} : ${properName}) = {  
    #for (typeDef <- fieldList)
    ".${typeDef.lowerName} *" #> ${lowerName}.${typeDef.lowerName} &
    #end
    ".edit${properName}" #> SHtml.hrefFunc(()=>${properName}Form.${lowerName}.set(${lowerName})) &
    ".show${properName}" #> SHtml.hrefFunc(()=>Show${properName}.set(Some(${lowerName}))) &
    ".delete${properName}" #> SHtml.hrefFunc(()=>${lowerName}.delete_!)
  }
}

object ${properName}Form extends LiftScreen {
  object ${lowerName} extends ScreenVar(${properName}.create)
  addFields(() => ${lowerName}.is)
  def finish() {
    S.notice("saved " + ${lowerName}.is.save)
  }
}
